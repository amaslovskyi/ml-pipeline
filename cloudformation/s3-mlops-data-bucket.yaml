AWSTemplateFormatVersion: "2010-09-09"
Description: "MLOps S3 Bucket for DVC Data Versioning and ML Artifacts Storage"

Parameters:
  BucketName:
    Type: String
    Default: mlops-data-bucket
    Description: Name of the S3 bucket for MLOps data storage
    AllowedPattern: "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
    ConstraintDescription: Bucket name must be lowercase, alphanumeric, and can contain hyphens

  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production
    Description: Environment for the MLOps infrastructure

  EnableVersioning:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable versioning for data lineage and rollback capabilities

  EnableEncryption:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: Enable server-side encryption for data security

Resources:
  # Main S3 Bucket for DVC and ML Artifacts
  MLOpsDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: !If [EnableVersioningCondition, Enabled, Suspended]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: !If [EnableEncryptionCondition, AES256, ""]
            BucketKeyEnabled: !If [EnableEncryptionCondition, true, false]
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          # Optimize storage costs for old versions
          - Id: OptimizeStorageCosts
            Status: Enabled
            NoncurrentVersionTransitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
              - TransitionInDays: 365
                StorageClass: DEEP_ARCHIVE
          # Clean up incomplete multipart uploads
          - Id: CleanupIncompleteUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
          # Clean up old delete markers
          - Id: CleanupDeleteMarkers
            Status: Enabled
            ExpiredObjectDeleteMarker: true

      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: MLOps-DVC-DataStorage
        - Key: ManagedBy
          Value: CloudFormation
        - Key: CostCenter
          Value: MLOps-Platform
        - Key: BackupRequired
          Value: "true"

  # CloudWatch Log Group for S3 access logging
  MLOpsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/s3/${BucketName}"
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: S3-AccessLogging

  # IAM Role for DVC Access
  DVCAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${BucketName}-dvc-access-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                "sts:ExternalId": "mlops-dvc-access"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: DVC-S3-Access

  # IAM Policy for DVC S3 Access
  DVCAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${BucketName}-dvc-access-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Full access to the DVC bucket
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:GetObjectVersion
              - s3:DeleteObjectVersion
            Resource: !Sub "${MLOpsDataBucket.Arn}/*"
          # Bucket-level permissions
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:ListBucketVersions
              - s3:GetBucketVersioning
            Resource: !GetAtt MLOpsDataBucket.Arn
          # CloudWatch Logs for monitoring
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: !GetAtt MLOpsLogGroup.Arn
      Roles:
        - !Ref DVCAccessRole

  # IAM Instance Profile for EC2 instances
  DVCInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "${BucketName}-dvc-instance-profile"
      Roles:
        - !Ref DVCAccessRole

  # IAM User for CI/CD Pipeline Access
  MLOpsCIUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "${BucketName}-ci-user"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: CI-CD-Pipeline-Access

  # Policy attachment for CI/CD User
  MLOpsCIUserPolicyAttachment:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${BucketName}-ci-user-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Full access to the DVC bucket
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:GetObjectVersion
              - s3:DeleteObjectVersion
            Resource: !Sub "${MLOpsDataBucket.Arn}/*"
          # Bucket-level permissions
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:ListBucketVersions
              - s3:GetBucketVersioning
            Resource: !GetAtt MLOpsDataBucket.Arn
      Users:
        - !Ref MLOpsCIUser

  # Access Keys for CI/CD User
  MLOpsCIUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref MLOpsCIUser

  # S3 Bucket Policy for additional security
  MLOpsDataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MLOpsDataBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Deny insecure connections
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !GetAtt MLOpsDataBucket.Arn
              - !Sub "${MLOpsDataBucket.Arn}/*"
            Condition:
              Bool:
                "aws:SecureTransport": "false"
          # Allow DVC role access
          - Sid: AllowDVCRoleAccess
            Effect: Allow
            Principal:
              AWS: !GetAtt DVCAccessRole.Arn
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetObjectVersion
              - s3:DeleteObjectVersion
            Resource:
              - !GetAtt MLOpsDataBucket.Arn
              - !Sub "${MLOpsDataBucket.Arn}/*"

Conditions:
  EnableVersioningCondition: !Equals [!Ref EnableVersioning, "true"]
  EnableEncryptionCondition: !Equals [!Ref EnableEncryption, "true"]
  IsProduction: !Equals [!Ref Environment, "production"]

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref MLOpsDataBucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"

  BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt MLOpsDataBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BucketArn"

  BucketDomainName:
    Description: Domain name of the S3 bucket
    Value: !GetAtt MLOpsDataBucket.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-BucketDomainName"

  BucketRegionalDomainName:
    Description: Regional domain name of the S3 bucket
    Value: !GetAtt MLOpsDataBucket.RegionalDomainName
    Export:
      Name: !Sub "${AWS::StackName}-BucketRegionalDomainName"

  DVCAccessRoleArn:
    Description: ARN of the DVC access role
    Value: !GetAtt DVCAccessRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-DVCAccessRoleArn"

  DVCInstanceProfileArn:
    Description: ARN of the DVC instance profile
    Value: !GetAtt DVCInstanceProfile.Arn
    Export:
      Name: !Sub "${AWS::StackName}-DVCInstanceProfileArn"

  CIUserAccessKeyId:
    Description: Access Key ID for CI/CD user
    Value: !Ref MLOpsCIUserAccessKey
    Export:
      Name: !Sub "${AWS::StackName}-CIUserAccessKeyId"

  CIUserSecretAccessKey:
    Description: Secret Access Key for CI/CD user (use with caution - store securely)
    Value: !GetAtt MLOpsCIUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub "${AWS::StackName}-CIUserSecretAccessKey"

  DVCConfigCommands:
    Description: Commands to configure DVC with this bucket
    Value: !Sub |
      dvc remote add -d s3 s3://${MLOpsDataBucket}/dvc
      dvc remote modify s3 region ${AWS::Region}
      # For EC2 instances with IAM role:
      dvc remote modify s3 profile default
      # For CI/CD with access keys:
      dvc remote modify s3 access_key_id ${MLOpsCIUserAccessKey}
      dvc remote modify s3 secret_access_key ${MLOpsCIUserAccessKey.SecretAccessKey}

  S3SyncCommands:
    Description: Example AWS CLI commands for bucket operations
    Value: !Sub |
      # Sync local data to S3
      aws s3 sync ./data s3://${MLOpsDataBucket}/data
      # List bucket contents
      aws s3 ls s3://${MLOpsDataBucket}/
      # Set bucket policy
      aws s3api put-bucket-policy --bucket ${MLOpsDataBucket} --policy file://bucket-policy.json

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Bucket Configuration"
        Parameters:
          - BucketName
          - Environment
      - Label:
          default: "Security Settings"
        Parameters:
          - EnableVersioning
          - EnableEncryption
    ParameterLabels:
      BucketName:
        default: "S3 Bucket Name"
      Environment:
        default: "Environment Type"
      EnableVersioning:
        default: "Enable S3 Versioning"
      EnableEncryption:
        default: "Enable Server-Side Encryption"
