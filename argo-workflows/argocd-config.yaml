apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ml-pipeline-workflows
  namespace: argo
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://github.com/amaslovs/ml-pipeline.git
    targetRevision: main
    path: argo-workflows
  destination:
    server: https://kubernetes.default.svc
    namespace: argo
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-pipeline-repo-config
  namespace: argo
data:
  repo-url: "https://github.com/amaslovs/ml-pipeline.git"
  repo-branch: "main"
  workflows-path: "argo-workflows"
  sync-interval: "5m"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ml-pipeline-workflow-manager
rules:
  - apiGroups: ["argoproj.io"]
    resources: ["workflows", "workflowtemplates", "cronworkflows"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods", "pods/log", "configmaps", "secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ml-pipeline-workflow-manager-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ml-pipeline-workflow-manager
subjects:
  - kind: ServiceAccount
    name: argo-workflow-sa
    namespace: argo
